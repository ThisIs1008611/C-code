#include <iostream>
using namespace std;

#define x 8//既然是矩阵，那么肯定要定义矩阵的行和列嘛
#define y 8//定义小点，毕竟是一个教学代码，不会多么大
int a[x][y];
int b[x][y];//上面两个是要相乘的矩阵，也是要输入的矩阵
int c[x][y];//那么相乘后的结果就放在另一个全新矩阵中就行
//自此，前期准备完成，开搞。

int main()
{
	{
		cout << "The first code" << endl;
		cout << "数组越界的概念和理论，我放注释里了" << endl << endl << endl;
		//数组越界就是数组的下标不在你所设置的范围内，比如说我定义了a[10],正常来说范围应该是从0到9的。
		//但是就有比如说a[-2]=6;a[10]=10;a[200]=7;等等，这些就是属于越界的数组，不过他们并不会导致编译错误。
		//不过编译错误不等于输出错误。越界的数组是有可能占用了别的内存空间，比如说运算公式空间，又或者说指令空间
	}

	{
		cout << "The second code" << endl;
		//矩阵乘法
		//编程求两个矩阵相乘的结果。输入第一行是整数m, n，表示第一个矩阵是m行n列的。接下来时一个m×n的矩阵。
		//再下一行的输入是整数p, q，表示下一个矩阵是p行q列(n=p)再接下来就是一个p行q列的矩阵。
		//要求输出两个矩阵相乘的结果矩阵(1 < m, n, p, q<= 8)。
	    int m, n, p, q;
	    cin >> m >> n;//m,n为a矩阵的行和列，首先输入。
	    for (int i = 0; i < m; i++)//开始输入a矩阵的所有值
	    	for (int j = 0; j < n; j++)
	    		cin >> a[i][j];
    	cin >> p >> q;//p,q是b矩阵的行和列，也开始输入。
	    for (int i = 0; i < p; i++)
    		for (int j = 0; j < q; j++)
    			cin >> b[i][j];//两个矩阵都已经准备完毕，现在开始计算。
    	for (int i = 0; i < m; i++)//从a矩阵的第一行开始
    	{
	    	for (int j = 0; j < q; j++)
    		{
    			//再找到b矩阵的第一列
	    		c[i][j] = 0;//首先初始化他们的乘积存放地
    			for (int k = 0; k < n; k++)//最后是找他们的每个数字毕竟要相乘
	    			c[i][j] += a[i][k] * b[k][j];//这个就是求所在值了
    		}
	    }
	    for (int i = 0; i < m; i++)//c矩阵的行列自此就转变为了a矩阵的行，b矩阵的列。
	    {
	    	for (int j = 0; j < q; j++)//所以他们的变量都要小于m，q
		    {
	    		cout << c[i][j] << " ";//判断每个数后就要输出值了。
	    	}
    	}
		cout << endl;
	}



}
