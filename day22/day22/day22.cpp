#include <iostream>
#include <stdio.h>
using namespace std;
int main()
{
	{//今天来整位运算。听了一节课跟没听一样，脑子发麻,听不懂啊blyat。
		cout << "The first code" << endl;
		int a = 15;
		short b = -15;
		unsigned short c = 0xffe0;
		char d = 15;
		//从这里开始就把注释写满吧。
		a=a >> 2;//首先，a=15，换算成十进制的话就是1111，但a是int类型，是32位，所以是
		//  0000 0000 0000 0000 0000 0000 0000 1111，向右移动两位，添入两个符号位，即0
		//为0000 0000 0000 0000 0000 0000 0000 0011
		//于是输出3

		b >>= 3;//首先，b=-15，换算成十进制就是1111，但b是short类型，是16位，并且b是负数，所以是
		//  1111 1111 1111 0001，向右移动三位，添加三个符号位，即1
		//为1111 1111 1111 1110，所输出为fffe

		//但！b却是short类型的数字，%x的位数又为32位，所以b被迫转变为32位，成为了fffffffe。

		c >>= 4;//首先，c直接就是ffe，因为它也是字母，输出也会是字母。
		//1111 1111 1110 0000向右4位，因为它是不会成为负数的，所以填入0就可以了，即
		//0000 1111 1111 1110，算下来还是ffe
		//注，因为他已经是字母了所以不再需要换类型。

		d >>= 3;//首先，char了也没用，因为你还是数字，但是char的位数只有8位，所以就是
		//0000 1111，向右三位，添入符号位，即0，成为
		//0000 0001，所输出为1
		//那就输出1呗。

		printf("a=%d,b=%x,c=%x,d=%x",a,b,c,d);
	}



}
